{"ast":null,"code":"var _jsxFileName = \"/Users/adityaprakash/Documents/site/frontend/src/pages/schedule.js\";\nimport React, {\n/*Component,*/\nuseState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-datepicker'; //import logo from \"./doc.jpeg\"\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\n\nfunction Schedule(props) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phno, setPhno] = useState('');\n  const [startDate, setStartDate] = useState(new Date()); //console.log(selectedDate);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger buttonBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroup-sizing-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 83\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    placeholder: \"Name\",\n    required: true,\n    type: \"text\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroup-sizing-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-envelope\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 83\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    type: \"text\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroup-sizing-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 83\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phno\",\n    placeholder: \"Contact No.\",\n    required: true,\n    type: \"number\",\n    value: phno,\n    onChange: e => {\n      setPhno(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"inputGroup-sizing-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 83\n    }\n  }))), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"datepicker\",\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    minDate: new Date() //isClearable\n    ,\n    showTimeSelect: true,\n    timeIntervals: 60,\n    timeCaption: \"Time\",\n    dateFormat: \"dd/MM/yyyy h:mm aa\",\n    filterDate: date => date.getDay() !== 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => {\n      props.submit(name, email, phno, startDate);\n    },\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Book\")));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (name, email, phno, startDate) => {\n      dispatch({\n        type: 'SUBMIT',\n        payload: {\n          name: name,\n          email: email,\n          phno: phno,\n          startDate: startDate\n        }\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Schedule);\n/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      const currDate=new Date();\n      if((this.state.startDate.getDate()===currDate.getDate())&&(this.state.startDate.getHours()< currDate.getHours())){\n        alert(\"This time slot has passed\");\n      }\n      else if(this.state.startDate.getDay()===6){\n        if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=14)){\n           alert('Clinic Closed in this slot')\n        }\n        else{\n            console.log(this.state)\n        }\n      }\n      else if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=17)){\n           alert('Clinic Closed in this slot')\n      }\n      else {\n        if((this.state.startDate.getHours()===13)){\n            alert('Lunch break')\n        }\n        else {\n            //var n = (this.state.startDate).toISOString();\n            console.log(this.state)\n        }\n      }\n    }\n   \n    render() {\n      return (\n        <div className=\"row schedule\">\n            <div className=\"col-sm-12 col-md-12 col-lg-3 info\">\n                <Link to='/'>\n                    <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n                </Link>\n                <img src={logo} className=\"logo\" alt=\"doc\"/>\n                <p><br/>\n                    <i className='fa fa-user-md'></i> Dr. ABC\n                </p>\n                <p>\n                    <i className='fa fa-history'></i> Book an hourly slot\n                </p>\n                    Working hrs. on Weekdays\n                    <ul> \n                        <li>9AM - 5PM</li>\n                        <li>1PM - 2PM(Lunch Break)</li>\n                    </ul>\n                    Working hrs. on Saturday\n                    <ul> \n                        <li>9AM - 2PM</li>\n                    </ul>\n                <p>\n                    <i className='fa fa-times'></i> Closed on Sundays\n                </p>\n            </div>\n            <div className=\"col-sm-12 col-md-12 col-lg-9 form\">\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" placeholder=\"Name\" required type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" placeholder=\"Email\" required type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" placeholder=\"Phone No.\" type=\"number\" required value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={60}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        />\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n            </div>\n        </div>\n      );\n    }\n    \n  }*/\n//export default Schedule;","map":{"version":3,"sources":["/Users/adityaprakash/Documents/site/frontend/src/pages/schedule.js"],"names":["React","useState","Link","DatePicker","connect","Schedule","props","name","setName","email","setEmail","phno","setPhno","startDate","setStartDate","Date","e","target","value","date","getDay","submit","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, {/*Component,*/useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\n//import logo from \"./doc.jpeg\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {connect} from 'react-redux'\n\n\nfunction Schedule(props) {\n\n    const[name,setName]=useState('');\n    const[email,setEmail]=useState('');\n    const[phno,setPhno]=useState('');\n    const [startDate, setStartDate]=useState(new Date());\n    //console.log(selectedDate);\n    return (\n    <div>\n        <Link to='/'>\n            <button className=\"btn btn-danger buttonBack\">Back</button>\n        </Link>\n\n        <form>\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n            </div>\n            <input id=\"name\" placeholder=\"Name\" required type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}}/>\n        </div>\n\n\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n            </div>\n            <input id=\"email\" placeholder=\"Email\" required type=\"text\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/>\n        </div>\n\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n            </div>\n            <input id=\"phno\" placeholder=\"Contact No.\" required type=\"number\" value={phno} onChange={(e)=>{setPhno(e.target.value)}}/>\n        </div>\n\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n            </div>\n            <DatePicker className=\"datepicker\"\n            selected={startDate} \n            onChange={date => setStartDate(date)}\n            minDate={new Date()}\n            //isClearable\n            showTimeSelect\n            timeIntervals={60}\n            timeCaption=\"Time\"\n            dateFormat=\"dd/MM/yyyy h:mm aa\"\n            filterDate={date => date.getDay()!==0}\n            />\n        </div>\n       \n        <button type=\"submit\" onClick={()=>{ props.submit(name, email, phno, startDate) }} className=\"btn btn-success\">Book</button>\n        </form>\n    </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submit:(name,email,phno,startDate) => {\n            dispatch({type:'SUBMIT',payload:{name:name, email:email, phno:phno, startDate:startDate}})\n        }\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Schedule);\n\n/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      const currDate=new Date();\n      if((this.state.startDate.getDate()===currDate.getDate())&&(this.state.startDate.getHours()< currDate.getHours())){\n        alert(\"This time slot has passed\");\n      }\n      else if(this.state.startDate.getDay()===6){\n        if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=14)){\n           alert('Clinic Closed in this slot')\n        }\n        else{\n            console.log(this.state)\n        }\n      }\n      else if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=17)){\n           alert('Clinic Closed in this slot')\n      }\n      else {\n        if((this.state.startDate.getHours()===13)){\n            alert('Lunch break')\n        }\n        else {\n            //var n = (this.state.startDate).toISOString();\n            console.log(this.state)\n        }\n      }\n    }\n   \n    render() {\n      return (\n        <div className=\"row schedule\">\n            <div className=\"col-sm-12 col-md-12 col-lg-3 info\">\n                <Link to='/'>\n                    <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n                </Link>\n                <img src={logo} className=\"logo\" alt=\"doc\"/>\n                <p><br/>\n                    <i className='fa fa-user-md'></i> Dr. ABC\n                </p>\n                <p>\n                    <i className='fa fa-history'></i> Book an hourly slot\n                </p>\n                    Working hrs. on Weekdays\n                    <ul> \n                        <li>9AM - 5PM</li>\n                        <li>1PM - 2PM(Lunch Break)</li>\n                    </ul>\n                    Working hrs. on Saturday\n                    <ul> \n                        <li>9AM - 2PM</li>\n                    </ul>\n                <p>\n                    <i className='fa fa-times'></i> Closed on Sundays\n                </p>\n            </div>\n            <div className=\"col-sm-12 col-md-12 col-lg-9 form\">\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" placeholder=\"Name\" required type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" placeholder=\"Email\" required type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" placeholder=\"Phone No.\" type=\"number\" required value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={60}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        />\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n            </div>\n        </div>\n      );\n    }\n    \n  }*/\n\n\n//export default Schedule;"]},"metadata":{},"sourceType":"module"}