{"ast":null,"code":"import _slicedToArray from\"/Users/adityaprakash/Documents/site/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{/*Component,*/useState}from'react';import{Link}from'react-router-dom';import DatePicker from'react-datepicker';//import DatePicker from '@y0c/react-datepicker';\nimport logo from\"./doc.jpeg\";import\"react-datepicker/dist/react-datepicker.css\";import{connect}from'react-redux';import{book}from'../actions/index';//import store from '../index'\n//import Calendar from 'react-calendar';\nimport\"../datepicker.css\";var currHour=new Date().getHours();//console.log(currHour)\nvar currDate=new Date().getDate();//console.log(currDate)\nvar currMonth=new Date().getMonth();//console.log(currMonth)\nfunction Schedule(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),detailError=_useState2[0],setDetailError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),phnoError=_useState4[0],setPhnoError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),emailError=_useState6[0],setEmailError=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),email=_useState10[0],setEmail=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),phno=_useState12[0],setPhno=_useState12[1];var _useState13=useState(new Date()),_useState14=_slicedToArray(_useState13,2),startDate=_useState14[0],setStartDate=_useState14[1];var _useState15=useState(true),_useState16=_slicedToArray(_useState15,2),ambulance=_useState16[0],setAmbulance=_useState16[1];//const k=(new Date().getHours())\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-primary buttonBack\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-arrow-left\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row schedule\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12 col-md-5 col-lg-3 info\"},/*#__PURE__*/React.createElement(Link,{to:\"/docDetails\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:\"logo\",alt:\"doc\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-user-md drName\"}),\" Dr. ABC\")),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-list\"}),\" Fill in details to book meeting\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-history\"}),\" Book an hourly slot\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-briefcase\"}),\" Working hrs. on Weekdays\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"9AM - 5PM\"),/*#__PURE__*/React.createElement(\"li\",null,\"1PM - 2PM(Lunch Break)\")),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-briefcase\"}),\" Working hrs. on Saturday\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"9AM - 2PM\")),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times\"}),\" Closed on Sundays\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-phone\"}),\" 9835567998\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-12 col-md-7 col-lg-9 details\"},/*#__PURE__*/React.createElement(\"div\",null,props.booked==='book success'?/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white border-success mb-3 mt-2 shadow-lg rounded resCard\",role:\"alert\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-success\"},\"Booked\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-success\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"card-title\"},\"Congrats\",/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-exclamation\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"card-text\"},\"Your slot has been booked\"))):null),/*#__PURE__*/React.createElement(\"div\",null,props.booked==='book fail'?/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white border-danger mb-3 mt-2 shadow-lg rounded resCard\",role:\"alert\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-danger\"},\"Unavailable\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-danger\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"card-title\"},\"Sorry\",/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-exclamation\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"card-text\"},\"It seems this slot is already booked. Please book another slot\"))):null/*props.booked==='book fail'? \n                            <div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                                \n                                <div class=\"toast-body\">\n                                    Hello, world! This is a toast message.\n                                </div>\n                          </div>: null*/),/*#__PURE__*/React.createElement(\"div\",null,props.loading===true?/*#__PURE__*/React.createElement(\"div\",{className:\"spinner-border text-primary\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\")):null),/*#__PURE__*/React.createElement(\"p\",{className:\"enterDet\"},\"Enter Details\"),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group name\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",id:\"inputGroup-sizing-default\"},/*#__PURE__*/React.createElement(\"big\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-user\"})))),/*#__PURE__*/React.createElement(\"input\",{className:\"shadow-lg bg-white rounded\",id:\"name\",placeholder:\"Name\",required:true,type:\"text\",value:name,onChange:function onChange(e){setName(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null)),detailError&&name.length===0?/*#__PURE__*/React.createElement(\"big\",{className:\"msg\"},\"*Name is a required field\"):null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",id:\"inputGroup-sizing-lg\"},/*#__PURE__*/React.createElement(\"big\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-envelope\"})))),/*#__PURE__*/React.createElement(\"input\",{className:\"shadow-lg bg-white rounded\",id:\"email\",placeholder:\"Email\",required:true,type:\"text\",value:email,onChange:function onChange(e){setEmail(e.target.value);}})),detailError&&email.length===0?/*#__PURE__*/React.createElement(\"big\",{className:\"msg\"},\"*Email is a required field\"):null,emailError?/*#__PURE__*/React.createElement(\"big\",{className:\"msg\"},\"*Invalid email\"):null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",id:\"inputGroup-sizing-lg\"},/*#__PURE__*/React.createElement(\"big\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-phone\"})))),/*#__PURE__*/React.createElement(\"input\",{className:\"shadow-lg bg-white rounded\",id:\"phno\",placeholder:\"Contact No.\",type:\"number\",value:phno,onChange:function onChange(e){setPhno(e.target.value);}})),detailError&&phno.length===0?/*#__PURE__*/React.createElement(\"big\",{className:\"msg\"},\"*Contact no. is a required field\"):null,phnoError?/*#__PURE__*/React.createElement(\"big\",{className:\"msg\"},\"*Please Enter 10 digits in Contact no.\"):null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-prepend\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text\",id:\"inputGroup-sizing-lg\"},/*#__PURE__*/React.createElement(\"big\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-calendar\"})))),/*#__PURE__*/React.createElement(DatePicker,{className:\"datepicker shadow-lg bg-white rounded\",selected:startDate,onChange:function onChange(date){return setStartDate(date);},minDate:new Date(),excludeTimes:[new Date().setHours(13)],minTime:new Date().setHours(8),maxTime:startDate.getDay()===6?new Date().setHours(14):new Date().setHours(18),showMonthDropdown:true//isClearable\n,showTimeSelect:true,timeIntervals:60,timeCaption:\"Time\",dateFormat:\"dd/MM/yyyy\",filterDate:function filterDate(date){return date.getDay()!==0;}})),startDate.getDay()!==6&&startDate.getHours()===13?/*#__PURE__*/React.createElement(\"small\",{className:\"msg\"},\"1PM is lunch hour\"):startDate.getMonth()===currMonth&&startDate.getDate()===currDate&&startDate.getHours()<currHour?/*#__PURE__*/React.createElement(\"small\",{className:\"msg\"},\"This time slot has passed\"):null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){if(name.length===0||phno.length===0||email.length===0){setDetailError(true);}else if(phno.length<10||phno.length>10){setPhnoError(true);setDetailError(false);setEmailError(false);}else if(!email.includes('@')&&!email.includes('.com')){setEmailError(true);setDetailError(false);setPhnoError(false);}else{setDetailError(false);setPhnoError(false);setEmailError(false);props.submit(name,email,phno,startDate);}},className:\"btn bookBtn mt-4\"},\"Book Appointment\"),/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-4\"},ambulance?/*#__PURE__*/React.createElement(\"div\",{className:\"card border-primary mb-3 ambulanceCard shadow-lg rounded\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header\"},\"Ambulance Service\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-primary\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"card-title text-danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-ambulance\"})),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"bg-light\",placeholder:\"Enter Phno.\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-warning mt-4\",onClick:function onClick(){setAmbulance(false);}},\"Book Ambulance\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"card border-primary mb-3 ambulanceCard shadow-lg rounded\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header\"},\"Ambulance Service\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-primary\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"card-title text-danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-ambulance\"})),/*#__PURE__*/React.createElement(\"p\",null,\"We will contact you shortly.\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-warning mt-4\",onClick:function onClick(){setAmbulance(true);}},\"OK\")))))));}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{submit:function submit(name,email,phno,startDate){//console.log(name,email,phno,startDate);\ndispatch(book(name,email,phno,startDate)/*{type:book().type,payload:{name:name, email:email, phno:phno, startDate:startDate}}*/);}};};var mapStateToProps=function mapStateToProps(state){var booked=state.booked;var loading=state.loading;return{booked:booked,loading:loading};};export default connect(mapStateToProps,mapDispatchToProps)(Schedule);/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      const currDate=new Date();\n      if((this.state.startDate.getDate()===currDate.getDate())&&(this.state.startDate.getHours()< currDate.getHours())){\n        alert(\"This time slot has passed\");\n      }\n      else if(this.state.startDate.getDay()===6){\n        if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=14)){\n           alert('Clinic Closed in this slot')\n        }\n        else{\n            console.log(this.state)\n        }\n      }\n      else if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=17)){\n           alert('Clinic Closed in this slot')\n      }\n      else {\n        if((this.state.startDate.getHours()===13)){\n            alert('Lunch break')\n        }\n        else {\n            //var n = (this.state.startDate).toISOString();\n            console.log(this.state)\n        }\n      }\n    }\n   \n    render() {\n      return (\n        <div className=\"row schedule\">\n            <div className=\"col-sm-12 col-md-12 col-lg-3 info\">\n                <Link to='/'>\n                    <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n                </Link>\n                <img src={logo} className=\"logo\" alt=\"doc\"/>\n                <p><br/>\n                    <i className='fa fa-user-md'></i> Dr. ABC\n                </p>\n                <p>\n                    <i className='fa fa-history'></i> Book an hourly slot\n                </p>\n                    Working hrs. on Weekdays\n                    <ul> \n                        <li>9AM - 5PM</li>\n                        <li>1PM - 2PM(Lunch Break)</li>\n                    </ul>\n                    Working hrs. on Saturday\n                    <ul> \n                        <li>9AM - 2PM</li>\n                    </ul>\n                <p>\n                    <i className='fa fa-times'></i> Closed on Sundays\n                </p>\n            </div>\n            <div className=\"col-sm-12 col-md-12 col-lg-9 form\">\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" placeholder=\"Name\" required type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" placeholder=\"Email\" required type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" placeholder=\"Phone No.\" type=\"number\" required value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={60}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        />\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n            </div>\n        </div>\n      );\n    }\n    \n  }*/ //export default Schedule;","map":{"version":3,"sources":["/Users/adityaprakash/Documents/site/frontend/src/pages/schedule.js"],"names":["React","useState","Link","DatePicker","logo","connect","book","currHour","Date","getHours","currDate","getDate","currMonth","getMonth","Schedule","props","detailError","setDetailError","phnoError","setPhnoError","emailError","setEmailError","name","setName","email","setEmail","phno","setPhno","startDate","setStartDate","ambulance","setAmbulance","booked","loading","e","target","value","length","date","setHours","getDay","includes","submit","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {/*Component,*/useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\n//import DatePicker from '@y0c/react-datepicker';\nimport logo from \"./doc.jpeg\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {connect} from 'react-redux';\nimport {book} from '../actions/index'; \n//import store from '../index'\n//import Calendar from 'react-calendar';\nimport \"../datepicker.css\"\n\nconst currHour=(new Date().getHours())\n//console.log(currHour)\nconst currDate=(new Date().getDate())\n//console.log(currDate)\nconst currMonth=(new Date().getMonth())\n//console.log(currMonth)\n\nfunction Schedule(props) {\n    \n    const[detailError,setDetailError]=useState(false);\n    const[phnoError,setPhnoError]=useState(false);\n    const[emailError,setEmailError]=useState(false);\n    const[name,setName]=useState('');\n    const[email,setEmail]=useState('');\n    const[phno,setPhno]=useState('');\n    const [startDate, setStartDate]=useState(new Date());\n    const[ambulance, setAmbulance]=useState(true);\n    //const k=(new Date().getHours())\n\n    return (\n        <div>\n\n            <div className=\"row\">\n            <nav className=\"navbar\">\n                <Link to='/'>\n                    <button className=\"btn btn-outline-primary buttonBack\"><i className=\"fa fa-arrow-left\"></i></button>\n                </Link>\n            </nav>\n            </div>\n\n            <div className=\"row schedule\">\n                \n                <div className=\"col-sm-12 col-md-5 col-lg-3 info\">\n                    <Link to='/docDetails'>\n                        <img src={logo} className=\"logo\" alt=\"doc\"/><br/>\n                    \n                        <h1><i className='fa fa-user-md drName'></i> Dr. ABC</h1>\n                    </Link>\n                    <hr/>\n                    <p>\n                        <i className='fa fa-list'></i> Fill in details to book meeting\n                    </p><hr/>\n                    <p>\n                        <i className='fa fa-history'></i> Book an hourly slot\n                    </p><hr/>\n                    <p><i className='fa fa-briefcase'></i> Working hrs. on Weekdays</p>\n                    <ul> \n                        <li>9AM - 5PM</li>\n                        <li>1PM - 2PM(Lunch Break)</li>\n                    </ul><hr/>\n                    <p><i className='fa fa-briefcase'></i> Working hrs. on Saturday</p>\n                    <ul> \n                        <li>9AM - 2PM</li>\n                    </ul><hr/>\n                    <p>\n                        <i className='fa fa-times'></i> Closed on Sundays\n                    </p><hr/>\n                    <p>\n                        <i className='fa fa-phone'></i> 9835567998\n                    </p><hr/>\n                </div>\n\n\n                <div className=\"col-sm-12 col-md-7 col-lg-9 details\">\n                \n\n                    <div>\n                        {\n                            props.booked==='book success'? \n                            <div className=\"card text-white border-success mb-3 mt-2 shadow-lg rounded resCard\" role=\"alert\">\n                                <div className=\"card-header text-success\">Booked</div>\n                                <div className=\"card-body text-success\">\n                                    <h5 className=\"card-title\">Congrats<i className=\"fa fa-exclamation\"></i></h5>\n                                    <p className=\"card-text\">Your slot has been booked</p>\n                                </div>\n                            </div> : null\n                        }\n                    </div>\n                    <div>\n                        {\n                            props.booked==='book fail'?\n                            <div className=\"card text-white border-danger mb-3 mt-2 shadow-lg rounded resCard\" role=\"alert\">\n                                <div className=\"card-header text-danger\">Unavailable</div>\n                                <div className=\"card-body text-danger\">\n                                    <h5 className=\"card-title\">Sorry<i className=\"fa fa-exclamation\"></i></h5>\n                                    <p className=\"card-text\">It seems this slot is already booked. Please book another slot</p>\n                                </div>\n                            </div> : null\n                            /*props.booked==='book fail'? \n                            <div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                                \n                                <div class=\"toast-body\">\n                                    Hello, world! This is a toast message.\n                                </div>\n                          </div>: null*/\n                        }\n                    </div>\n\n                    <div>\n                        {\n                            props.loading===true ? \n                            <div className=\"spinner-border text-primary\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>:null\n                        }\n                    </div>\n                    <p className=\"enterDet\">Enter Details</p>\n                    <div className=\"input-group name\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><big><i className='fa fa-user'></i></big></span>\n                        </div>\n                        \n                        <input className=\"shadow-lg bg-white rounded\" id=\"name\" placeholder=\"Name\" required type=\"text\" value={name} onChange={(e)=>{setName(e.target.value)}}/><br/>\n                        \n                    </div>\n                    {\n                        detailError && name.length===0?\n                        <big className=\"msg\">\n                            *Name is a required field\n                        </big>: null\n                    }\n\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\"><big><i className='fa fa-envelope'></i></big></span>\n                        </div>\n                        <input className=\"shadow-lg bg-white rounded\" id=\"email\" placeholder=\"Email\" required type=\"text\" value={email} onChange={(e)=>{setEmail(e.target.value)}}/>\n                        \n                        \n                    </div>\n                    {\n                        detailError && email.length===0?\n                        <big className=\"msg\">\n                            *Email is a required field\n                        </big>: null\n                    }\n                    {\n                        emailError? \n                        <big className=\"msg\">\n                            *Invalid email\n                        </big> : null\n                    }\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\"><big><i className='fa fa-phone'></i></big></span>\n                        </div>\n                        <input className=\"shadow-lg bg-white rounded\" id=\"phno\" placeholder=\"Contact No.\" type=\"number\" value={phno} onChange={(e)=>{setPhno(e.target.value)}}/>\n                       \n                        \n                    </div>\n                    {\n                        detailError && phno.length===0?\n                        <big className=\"msg\">\n                            *Contact no. is a required field\n                        </big>: null\n                    }\n\n                    {\n                        phnoError? \n                        <big className=\"msg\">\n                            *Please Enter 10 digits in Contact no.\n                        </big> : null\n                    }\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\"><big><i className='fa fa-calendar'></i></big></span>\n                        </div>\n                        <DatePicker className=\"datepicker shadow-lg bg-white rounded\"\n                        selected={startDate} \n                        onChange={date => setStartDate(date)}\n                        minDate={new Date()}\n                        excludeTimes={[\n                            new Date().setHours(13)\n                        ]}\n                        minTime={new Date().setHours(8)}\n                        maxTime={startDate.getDay()===6 ? new Date().setHours(14):new Date().setHours(18)}\n                        showMonthDropdown\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={60}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy\"\n                        filterDate={date => date.getDay()!==0}\n                        />\n                    </div>\n\n                    {\n                        (startDate.getDay()!==6 && startDate.getHours()===13) ? \n                        <small className=\"msg\">1PM is lunch hour</small> : \n                        (startDate.getMonth()===currMonth && startDate.getDate()===currDate && startDate.getHours()<currHour) ? \n                        <small className=\"msg\">This time slot has passed</small> : null\n                    }\n\n                \n                    <button onClick={()=>{ \n                                        if(name.length===0 || phno.length===0 || email.length===0 ){setDetailError(true)}\n                                        else if(phno.length<10 || phno.length>10){setPhnoError(true);setDetailError(false);setEmailError(false)}\n                                        else if(!email.includes('@') && !email.includes('.com')){setEmailError(true);setDetailError(false);setPhnoError(false);}\n\n                                        else {  setDetailError(false)\n                                                setPhnoError(false)\n                                                setEmailError(false)\n                                            props.submit(name, email, phno, startDate)} }} \n                                        className=\"btn bookBtn mt-4\">Book Appointment</button>\n                                        \n                    <div className=\"row mt-4\">\n                    {\n                        ambulance?<div className=\"card border-primary mb-3 ambulanceCard shadow-lg rounded\">\n                                    <div className=\"card-header\">Ambulance Service</div>\n                                    <div className=\"card-body text-primary\">\n                                        <h5 className=\"card-title text-danger\"><i className=\"fa fa-ambulance\"></i></h5>\n                                        <input type='text' className=\"bg-light\" placeholder=\"Enter Phno.\"/>\n                                        <button type=\"button\" className=\"btn btn-warning mt-4\" onClick={()=>{setAmbulance(false)}}>Book Ambulance</button>\n                                    </div>\n                                </div>:<div className=\"card border-primary mb-3 ambulanceCard shadow-lg rounded\">\n                                        <div className=\"card-header\">Ambulance Service</div>\n                                        <div className=\"card-body text-primary\">\n                                            <h5 className=\"card-title text-danger\"><i className=\"fa fa-ambulance\"></i></h5>\n                                            <p>We will contact you shortly.</p>\n                                            <button type=\"button\" className=\"btn btn-warning mt-4\" onClick={()=>{setAmbulance(true)}}>OK</button>\n                                        </div>\n                                    </div>\n                    }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submit:(name,email,phno,startDate) => {\n            //console.log(name,email,phno,startDate);\n            dispatch(book(name,email,phno,startDate)/*{type:book().type,payload:{name:name, email:email, phno:phno, startDate:startDate}}*/)\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    const booked=state.booked\n    const loading=state.loading\n    return {booked,loading};\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Schedule);\n\n/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      const currDate=new Date();\n      if((this.state.startDate.getDate()===currDate.getDate())&&(this.state.startDate.getHours()< currDate.getHours())){\n        alert(\"This time slot has passed\");\n      }\n      else if(this.state.startDate.getDay()===6){\n        if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=14)){\n           alert('Clinic Closed in this slot')\n        }\n        else{\n            console.log(this.state)\n        }\n      }\n      else if(this.state.startDate.getHours()<9 || (this.state.startDate.getMinutes()>=0 && this.state.startDate.getHours()>=17)){\n           alert('Clinic Closed in this slot')\n      }\n      else {\n        if((this.state.startDate.getHours()===13)){\n            alert('Lunch break')\n        }\n        else {\n            //var n = (this.state.startDate).toISOString();\n            console.log(this.state)\n        }\n      }\n    }\n   \n    render() {\n      return (\n        <div className=\"row schedule\">\n            <div className=\"col-sm-12 col-md-12 col-lg-3 info\">\n                <Link to='/'>\n                    <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n                </Link>\n                <img src={logo} className=\"logo\" alt=\"doc\"/>\n                <p><br/>\n                    <i className='fa fa-user-md'></i> Dr. ABC\n                </p>\n                <p>\n                    <i className='fa fa-history'></i> Book an hourly slot\n                </p>\n                    Working hrs. on Weekdays\n                    <ul> \n                        <li>9AM - 5PM</li>\n                        <li>1PM - 2PM(Lunch Break)</li>\n                    </ul>\n                    Working hrs. on Saturday\n                    <ul> \n                        <li>9AM - 2PM</li>\n                    </ul>\n                <p>\n                    <i className='fa fa-times'></i> Closed on Sundays\n                </p>\n            </div>\n            <div className=\"col-sm-12 col-md-12 col-lg-9 form\">\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" placeholder=\"Name\" required type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" placeholder=\"Email\" required type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" placeholder=\"Phone No.\" type=\"number\" required value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={60}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        />\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n            </div>\n        </div>\n      );\n    }\n    \n  }*/\n\n\n//export default Schedule;"]},"metadata":{},"sourceType":"module"}