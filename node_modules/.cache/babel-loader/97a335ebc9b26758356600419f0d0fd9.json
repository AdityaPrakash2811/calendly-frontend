{"ast":null,"code":"const iState = {\n  users: [],\n  loading: false,\n  booked: '',\n  error: null\n};\n\nfunction reducer(state = iState, action) {\n  switch (action.type) {\n    case 'ADD_BOOK_STARTED':\n      return { ...state,\n        loading: true\n      };\n\n    case 'ADD_BOOK_SUCCESS':\n      return { ...state,\n        loading: false,\n        booked: 'book success',\n        error: null,\n        users: [...state.users, action.payload]\n      };\n\n    case 'ADD_BOOK_FAILURE':\n      return { ...state,\n        loading: false,\n        booked: 'book fail',\n        error: action.payload.error\n      };\n\n    case 'GET_MEETING_SUCCESS':\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer; //const iState = {name:\"\",email:\"\",phno:\"\",startDate:new Date()}\n\n/*const reducer = (state=iState, action) => {\n    switch(action.type){\n        case 'BOOK':\n            //return action.payload\n            return{\n                ...state,\n                users: [...state.users, action.payload]\n            }\n        default:\n            return state\n    }\n}*/","map":{"version":3,"sources":["/Users/adityaprakash/Documents/site/frontend/src/reducer/reducer.js"],"names":["iState","users","loading","booked","error","reducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AAACC,EAAAA,KAAK,EAAC,EAAP;AACCC,EAAAA,OAAO,EAAC,KADT;AAECC,EAAAA,MAAM,EAAC,EAFR;AAGCC,EAAAA,KAAK,EAAC;AAHP,CAAf;;AAMA,SAASC,OAAT,CAAiBC,KAAK,GAAGN,MAAzB,EAAiCO,MAAjC,EAAyC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAC,cAHF;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLH,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACE,OAAxB;AALF,OAAP;;AAOF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAC,WAHF;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAJjB,OAAP;;AAQF,SAAK,qBAAL;AACE,aAAM,EACJ,GAAGE,KADC;AAEJL,QAAAA,KAAK,EAAC,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACE,OAAxB;AAFF,OAAN;;AAMF;AACE,aAAOH,KAAP;AA/BJ;AAiCD;;AAEH,eAAeD,OAAf,C,CAIA;;AAGA","sourcesContent":["const iState = {users:[],\n                loading:false,\n                booked:'',\n                error:null}\n\n\nfunction reducer(state = iState, action) {\n    switch (action.type) {\n      case 'ADD_BOOK_STARTED':\n        return {\n          ...state,\n          loading: true,\n        };\n      case 'ADD_BOOK_SUCCESS':\n        return {\n          ...state,\n          loading: false,\n          booked:'book success',\n          error: null,\n          users: [...state.users, action.payload]\n        };\n      case 'ADD_BOOK_FAILURE':\n        return {\n          ...state,\n          loading: false,\n          booked:'book fail',\n          error: action.payload.error\n        };\n\n\n      case 'GET_MEETING_SUCCESS':\n        return{\n          ...state,\n          users:[...state.users, action.payload]\n        };\n\n\n      default:\n        return state;\n    }\n  }\n\nexport default reducer\n\n\n\n//const iState = {name:\"\",email:\"\",phno:\"\",startDate:new Date()}\n\n\n/*const reducer = (state=iState, action) => {\n    switch(action.type){\n        case 'BOOK':\n            //return action.payload\n            return{\n                ...state,\n                users: [...state.users, action.payload]\n            }\n        default:\n            return state\n    }\n}*/\n"]},"metadata":{},"sourceType":"module"}