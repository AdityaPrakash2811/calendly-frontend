{"ast":null,"code":"var _jsxFileName = \"/Users/adityaprakash/Documents/site/frontend/src/pages/schedule.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n/*function Schedule() {\n\n    const [selectedDate, setSelectedDate]=useState(null);\n    //console.log(selectedDate);\n    return (\n    <div>\n        <Link to='/'>\n            <button className=\"btn btn-danger buttonBack\">Back</button>\n        </Link>\n        <DatePicker \n            selected={selectedDate} \n            onChange={date => setSelectedDate(date)} \n            minDate={new Date()}\n            isClearable\n            showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={60}\n              timeCaption=\"time\"\n            />\n\n        <button>Show</button>\n    </div>\n    );\n   \n}*/\n\n/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      console.log(this.state)\n    }\n   \n    render() {\n      return (\n        <div className=\"schedule\">\n            <Link to='/'>\n                <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n            </Link>\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" type=\"number\" value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={30}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        //minTime={this.state.startDate.getHours()===1}\n                        />\n                        <button className=\"btn btn-primary\">1 hr</button>\n                        <button className=\"btn btn-warning\">30 min</button>\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n        </div>\n      );\n    }\n    \n  }*/\n\nSchedule => {\n  const [startDate, setStartDate] = useState(setHours(setMinutes(new Date(), 30), 17));\n  return /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    showTimeSelect: true,\n    minTime: setHours(setMinutes(new Date(), 0), 17),\n    maxTime: setHours(setMinutes(new Date(), 30), 20),\n    dateFormat: \"MMMM d, yyyy h:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default Schedule;","map":{"version":3,"sources":["/Users/adityaprakash/Documents/site/frontend/src/pages/schedule.js"],"names":["React","Component","Link","DatePicker","Schedule","startDate","setStartDate","useState","setHours","setMinutes","Date","date"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGEC,QAAQ,IAAI;AACV,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CACxCC,QAAQ,CAACC,UAAU,CAAC,IAAIC,IAAJ,EAAD,EAAa,EAAb,CAAX,EAA6B,EAA7B,CADgC,CAA1C;AAGA,sBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEL,SADZ;AAEE,IAAA,QAAQ,EAAEM,IAAI,IAAIL,YAAY,CAACK,IAAD,CAFhC;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,OAAO,EAAEH,QAAQ,CAACC,UAAU,CAAC,IAAIC,IAAJ,EAAD,EAAa,CAAb,CAAX,EAA4B,EAA5B,CAJnB;AAKE,IAAA,OAAO,EAAEF,QAAQ,CAACC,UAAU,CAAC,IAAIC,IAAJ,EAAD,EAAa,EAAb,CAAX,EAA6B,EAA7B,CALnB;AAME,IAAA,UAAU,EAAC,sBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAdD;;AAiBF,eAAeN,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n/*function Schedule() {\n\n    const [selectedDate, setSelectedDate]=useState(null);\n    //console.log(selectedDate);\n    return (\n    <div>\n        <Link to='/'>\n            <button className=\"btn btn-danger buttonBack\">Back</button>\n        </Link>\n        <DatePicker \n            selected={selectedDate} \n            onChange={date => setSelectedDate(date)} \n            minDate={new Date()}\n            isClearable\n            showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={60}\n              timeCaption=\"time\"\n            />\n\n        <button>Show</button>\n    </div>\n    );\n   \n}*/\n\n/*class Schedule extends Component {\n    \n    constructor (props) {\n      super(props)\n      this.state = {\n        name: \"\",\n        email:\"\",\n        phno:\"\",\n        startDate:new Date()\n      };\n      this.handleChangeDate = this.handleChangeDate.bind(this);\n      this.handleChangeName = this.handleChangeName.bind(this);\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\n      this.handleChangePhno = this.handleChangePhno.bind(this);\n      this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleChangeEmail(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleChangePhno(event) {\n        this.setState({phno: event.target.value});\n    }\n  \n    handleChangeDate(date) {\n      this.setState({\n        startDate: date\n      })\n    }\n  \n    onFormSubmit(e) {\n      e.preventDefault();\n      console.log(this.state)\n    }\n   \n    render() {\n      return (\n        <div className=\"schedule\">\n            <Link to='/'>\n                <button className=\"btn btn-danger buttonBack\">Back</button><br/>\n            </Link>\n            <form onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-user'></i></span>\n                        </div>\n                        <input id=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChangeName}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-envelope'></i></span>\n                        </div>\n                        <input id=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChangeEmail}/>\n                    </div>\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-phone'></i></span>\n                        </div>\n                        <input id=\"phno\" type=\"number\" value={this.state.phno} onChange={this.handleChangePhno}/>\n                    </div>\n\n                    \n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\"><i className='fa fa-calendar'></i></span>\n                        </div>\n                        <DatePicker className=\"datepicker\"\n                        selected={ this.state.startDate }\n                        onChange={ this.handleChangeDate }\n                        minDate={new Date()}\n                        //isClearable\n                        showTimeSelect\n                        timeIntervals={30}\n                        timeCaption=\"Time\"\n                        dateFormat=\"dd/MM/yyyy h:mm aa\"\n                        filterDate={date => date.getDay()!==0}\n                        //minTime={this.state.startDate.getHours()===1}\n                        />\n                        <button className=\"btn btn-primary\">1 hr</button>\n                        <button className=\"btn btn-warning\">30 min</button>\n                    </div>\n\n                    <button className=\"btn btn-success\">Book</button>\n                </div>\n            </form>\n        </div>\n      );\n    }\n    \n  }*/\n\n  Schedule => {\n    const [startDate, setStartDate] = useState(\n      setHours(setMinutes(new Date(), 30), 17)\n    );\n    return (\n      <DatePicker\n        selected={startDate}\n        onChange={date => setStartDate(date)}\n        showTimeSelect\n        minTime={setHours(setMinutes(new Date(), 0), 17)}\n        maxTime={setHours(setMinutes(new Date(), 30), 20)}\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}